{"version":3,"file":"static/js/0.57970bcb.chunk.js","mappings":"qJAGA,MAAM,KAAEA,GAASC,EAAAA,EAsBjB,EApB8CC,IAKvC,IALwC,KAC7CC,EAAI,MACJC,EAAK,IACLC,EAAG,QACHC,GACDJ,EACC,OACEK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACN,EAAAA,EAAI,CACHS,MAAOP,EACPQ,MAAO,CAAEC,MAAO,SAChBC,UAAU,EACVC,OAAOP,EAAAA,EAAAA,KAAA,OAAKQ,IAAKZ,EAAMa,IAAKZ,IAAUK,UAEtCF,EAAAA,EAAAA,KAACP,EAAI,CAACU,MAAOL,EAAKY,YAAaX,OAEhC,E,wBCjBP,MAUA,EAV8CJ,IAA+B,IAA9B,SAAEgB,EAAQ,WAAEC,GAAYjB,EACrE,OACEK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEW,EAAAA,EAAAA,MAAA,MAAAX,SAAA,CAAI,sBACkBS,EAAS,KAAGC,EAAW,QAE5C,ECyBP,EA/B6BE,KAC3B,MAAOH,EAAUI,IAAeC,EAAAA,EAAAA,UAAwB,OACjDJ,EAAYK,IAAiBD,EAAAA,EAAAA,UAAwB,MAsB5D,OAVAE,EAAAA,EAAAA,YAAU,KACgBC,WACtB,MAAMC,QAAeC,MAAM,qCAZT1B,KAMf,IANgB,SACrBgB,EAAQ,UACRW,GAID3B,EACCoB,EAAYJ,GACZM,EAAcK,EAAU,EAMtBC,OADmBH,EAAOI,OACP,EAGrBC,EAAiB,GAChB,CAACC,aAGF1B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC2B,EAAW,CAAChB,SAAUA,EAAUC,WAAYA,KAC5C,ECjBP,EARsBjB,IAA0B,IAAzB,SAAEO,GAAiBP,EACxC,MAAwB,oBAAbO,EACFA,IAEAA,CACT,ECNF,EAH0B0B,KACjB5B,EAAAA,EAAAA,KAAC6B,EAAa,CAAA3B,SAAEA,KAAMF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,WCsBpC,EAtB4CP,IAAgD,IAA/C,SAACgB,EAAQ,WAAEC,GAAgCjB,EACpF,MAAOmC,EAAQC,IAAaf,EAAAA,EAAAA,UAAS,CAACgB,UAAU,GAAGC,SAAS,KAEtDC,EAAgBC,IAClBJ,EAAU,IACHD,EACH,CAACK,EAAEC,OAAOxC,MAAMuC,EAAEC,OAAOC,OAC3B,EAMN,OAAQxB,EAAAA,EAAAA,MAAA,QAAMyB,SAJQC,IAClBA,EAAMC,iBACNC,QAAQC,IAAIZ,EAAO,EAEc5B,SAAA,EACjCW,EAAAA,EAAAA,MAAA,MAAAX,SAAA,CAAI,cAAYS,EAAS,iBAAeC,MACxCC,EAAAA,EAAAA,MAAA,SAAAX,SAAA,CAAO,gBAAYF,EAAAA,EAAAA,KAAA,SAAOJ,KAAK,YAAY+C,KAAK,OAAOC,SAAUV,QACjErB,EAAAA,EAAAA,MAAA,SAAAX,SAAA,CAAO,eAAWF,EAAAA,EAAAA,KAAA,SAAOJ,KAAK,WAAW+C,KAAK,OAAOC,SAAUV,QAE/DlC,EAAAA,EAAAA,KAAA,UAAQ2C,KAAK,SAAQzC,SAAC,aACnB,ECCX,EArBgB2C,KACZ,MAAOf,EAAQC,IAAaf,EAAAA,EAAAA,UAAS,CAACgB,UAAU,GAAGC,SAAS,KAEtDC,EAAgBC,IAClBJ,EAAU,IACHD,EACH,CAACK,EAAEC,OAAOxC,MAAMuC,EAAEC,OAAOC,OAC3B,EAON,OAAQxB,EAAAA,EAAAA,MAAA,QAAMyB,SALQC,IAClBA,EAAMC,iBACNC,QAAQC,IAAIZ,EAAO,EAGc5B,SAAA,EACjCW,EAAAA,EAAAA,MAAA,SAAAX,SAAA,CAAO,gBAAYF,EAAAA,EAAAA,KAAA,SAAO8C,aAAc,aAAcT,MAAOP,EAAOE,UAAWpC,KAAK,YAAY+C,KAAK,OAAOC,SAAUV,QACtHrB,EAAAA,EAAAA,MAAA,SAAAX,SAAA,CAAO,eAAWF,EAAAA,EAAAA,KAAA,SAAO8C,aAAc,YAAaT,MAAOP,EAAOG,SAAUrC,KAAK,WAAW+C,KAAK,OAAOC,SAAUV,QAElHlC,EAAAA,EAAAA,KAAA,UAAQ2C,KAAK,SAAQzC,SAAC,aACnB,ECNX,EAba6C,KACT,MAAMC,GAAWC,EAAAA,EAAAA,QAAyB,MAM1C,OAAQpC,EAAAA,EAAAA,MAAAZ,EAAAA,SAAA,CAAAC,SAAA,EACRF,EAAAA,EAAAA,KAAA,SAAO2C,KAAK,OAAOO,IAAKF,KACxBhD,EAAAA,EAAAA,KAAA,UAAQmD,QANSC,KACbJ,EAASK,QAASC,OAAO,EAKHpD,SAAC,YACxB,E,wBCTP,MAwBA,EAxBmBqD,KACjB,MAAOC,EAAOC,IAAYzC,EAAAA,EAAAA,UAAS,CAAC,SAAU,SAAU,WAKxD,OACEhB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC0D,EAAAA,EAAe,CAAAxD,SACbsD,EAAMG,KAAI,CAACC,EAAGC,KAEX7D,EAAAA,EAAAA,KAAC8D,EAAAA,QAAa,CAAaC,QAAS,IAAMC,WAAW,OAAM9D,UACzDW,EAAAA,EAAAA,MAAA,OAAAX,SAAA,CACG0D,GACD5D,EAAAA,EAAAA,KAAA,UAAQmD,QAASA,KAAMc,OAZjBC,EAY4BN,OAX9CH,EAAS,IAAID,EAAMW,QAAQP,GAAMA,IAAMM,MADrBA,KAY+B,EAAAhE,SAAC,eAHtB2D,QASzB,ECJP,EAhBiClE,IAAqC,IAApC,MAAEU,EAAK,OAAE+D,GAAqBzE,EAC9D,OACEkB,EAAAA,EAAAA,MAAAZ,EAAAA,SAAA,CAAAC,SAAA,EACEW,EAAAA,EAAAA,MAAA,OAAKuD,OAAQA,EAAQ/D,MAAOA,EAAMH,SAAA,EAChCF,EAAAA,EAAAA,KAAA,UAAQqE,GAAI,IAAKC,GAAI,IAAKC,EAAG,GAAIC,KAAK,SACtCxE,EAAAA,EAAAA,KAAA,QAAMyE,EAAG,IAAKC,EAAG,IAAKrE,MAAO,GAAI+D,OAAQ,GAAII,KAAK,aAIpDxE,EAAAA,EAAAA,KAAA,UAAQ2C,KAAK,gBAAgBgC,KAAK,iBAAgBzE,UAChDF,EAAAA,EAAAA,KAAA,SAAOJ,KAAK,OAAOyC,MAAM,cAE1B,ECTDuC,EAA2BjF,IAGnB,IAFZkF,MAAM,KAAEjF,EAAI,KAAEkF,GAAM,aACpBC,GACMpF,EAIN,OAHAuB,EAAAA,EAAAA,YAAU,KACRuB,QAAQC,IAAI,eAAe,KAG3B7B,EAAAA,EAAAA,MAAAZ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKgF,UAAWF,EAAO,YAAc,GAAG5E,SAAEN,KAC1CI,EAAAA,EAAAA,KAAA,UAAQmD,QAASA,IAAM4B,EAAanF,GAAMM,SAAC,aAC1C,EAIP,GAAe+E,EAAAA,EAAAA,MAAKL,GCddM,EAAsBvF,IAAqC,IAApC,MAAEwF,EAAK,aAAEJ,GAAqBpF,EAIzD,OAHAuB,EAAAA,EAAAA,YAAU,KACRuB,QAAQC,IAAI,oBAAoB,KAGhC1C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGiF,EAAMxB,KAAI,CAACC,EAAGC,KACb7D,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC4E,EAAa,CAACC,KAAMjB,EAAGmB,aAAcA,KAD/BlB,QAKZ,EAIP,GAAeoB,EAAAA,EAAAA,MAAKC,GCwCpB,EA5D0BE,MACxBlE,EAAAA,EAAAA,YAAU,IAAMuB,QAAQC,IAAI,wBAC5B,MAIOyC,EAAOE,IAAYrE,EAAAA,EAAAA,UAJG,CAC3B,CAAEpB,KAAM,eAAgBkF,MAAM,GAC9B,CAAElF,KAAM,iBAAkBkF,MAAM,MAG3BD,EAAMS,IAAWtE,EAAAA,EAAAA,aACjBuE,EAAMC,IAAWxE,EAAAA,EAAAA,YAgBlByE,GAAWC,EAAAA,EAAAA,UAAQ,IAChBP,EAAMhB,QAAQwB,IAER,IAADC,EAAV,OADAnD,QAAQC,IAAI,oBACR6C,IACqB,QAAvBK,EAAOD,EAAY/F,YAAI,IAAAgG,OAAA,EAAhBA,EAAkBC,cAAcC,SAASP,GAEvC,KAEZ,CAACA,EAAMJ,IAEJJ,GAAegB,EAAAA,EAAAA,cAClBnG,IACCyF,EACEF,EAAMhB,QAAQ6B,IAAC,IAAAC,EAAA,OAAW,QAANA,EAAAD,EAAEpG,YAAI,IAAAqG,OAAA,EAANA,EAAQJ,iBAAkBjG,EAAKsG,mBAAmB,IACvE,GAEH,CAACf,IAGH,OACEtE,EAAAA,EAAAA,MAAAZ,EAAAA,SAAA,CAAAC,SAAA,EACEW,EAAAA,EAAAA,MAAA,OAAAX,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACE2C,KAAK,OACLG,aAAc,GACdT,MAAOwC,EACPjC,SAxCYT,IAClBmD,EAAQnD,EAAEC,OAAOC,MAAM,KAyCnBrC,EAAAA,EAAAA,KAAA,UAAQmD,QAtCKgD,KACjBX,EAAQ,IACRH,EAAS,IAAIF,EAAO,CAAEvF,KAAMiF,EAAMC,MAAM,KACxCQ,EAAQ,GAAG,EAmCqBpF,SAAC,UAC7BF,EAAAA,EAAAA,KAAA,UAAQmD,QAjCKiD,KACjBZ,EAAQX,EAAK,EAgCmB3E,SAAC,eAE/BF,EAAAA,EAAAA,KAACkF,EAAQ,CAACC,MAAOM,EAAUV,aAAcA,MACxC,ECHP,EA3CsBsB,KAkBlBxF,EAAAA,EAAAA,MAAAZ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACsG,EAAAA,EAAI,CAACC,IAAK,QAAQrG,SAlBe,CACpC,CACEN,KAAM,OACNC,MAAO,6DACPC,IAAK,GACLC,QAAS,gBAGX,CACEH,KAAM,QACNC,MAAO,6DACPC,IAAK,GACLC,QAAS,iBAOA4D,KAAI,CAACC,EAAGC,KACb7D,EAAAA,EAAAA,KAACwG,EAAW,IAAiB5C,GAAXC,QAItB7D,EAAAA,EAAAA,KAACc,EAAoB,KAErBd,EAAAA,EAAAA,KAAC4B,EAAiB,KAElB5B,EAAAA,EAAAA,KAACyG,EAAS,CAAC9F,SAAU,EAAGC,WAAY,KAEpCZ,EAAAA,EAAAA,KAAC6C,EAAO,KAER7C,EAAAA,EAAAA,KAAC+C,EAAI,KAEL/C,EAAAA,EAAAA,KAACuD,EAAU,KAEXvD,EAAAA,EAAAA,KAAC0G,EAAO,CAACtC,OAAQ,IAAK/D,MAAO,OAC7BL,EAAAA,EAAAA,KAACoF,EAAiB,M","sources":["components/Demo/UserProfile.tsx","components/Demo/Geolocation/Geolocation.tsx","components/Demo/Geolocation/GeolocationContainer.tsx","components/Utils/ChildFunction.tsx","components/Demo/ChildFunction/ChildFunctionDemo.tsx","components/Demo/Form/Unhandled.tsx","components/Demo/Form/Handled.tsx","components/Demo/Form/Refs.tsx","components/Demo/Form/Transition.tsx","components/Demo/Form/SvgTest.tsx","components/Demo/Hooks/todo/TaskComponent.tsx","components/Demo/Hooks/todo/TaskListComponent.tsx","components/Demo/Hooks/todo/ToDoMainComponent.tsx","components/Demo/index.tsx"],"sourcesContent":["import { FC } from \"react\";\r\nimport { UserProfileInterface } from \"types/SystemTypes\";\r\nimport { Card } from \"antd\";\r\nconst { Meta } = Card;\r\n\r\nconst UserProfile: FC<UserProfileInterface> = ({\r\n  name,\r\n  photo,\r\n  age,\r\n  address,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Card\r\n        title={name}\r\n        style={{ width: \"100px\" }}\r\n        bordered={false}\r\n        cover={<img alt={name} src={photo} />}\r\n      >\r\n        <Meta title={age} description={address} />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import { FC } from \"react\";\r\nimport { GeolocationInterface } from \"types/SystemTypes\";\r\n\r\n// This is the presentation component\r\nconst Geolocation: FC<GeolocationInterface> = ({ latitude, longtitude }) => {\r\n  return (\r\n    <>\r\n      <h4>\r\n        Current location: ({latitude}, {longtitude})\r\n      </h4>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Geolocation;\r\n","// This is the container component\r\nimport { useEffect, useState } from \"react\";\r\nimport Geolocation from \"./Geolocation\";\r\n\r\nconst GeolocationContainer = () => {\r\n  const [latitude, setLatitude] = useState<number | null>(null);\r\n  const [longtitude, setLongtitude] = useState<number | null>(null);\r\n\r\n  const handleSuccess = ({\r\n    latitude,\r\n    longitude,\r\n  }: {\r\n    latitude: number;\r\n    longitude: number;\r\n  }) => {\r\n    setLatitude(latitude);\r\n    setLongtitude(longitude);\r\n  };\r\n  useEffect(() => {\r\n    const fetchGelocation = async () => {\r\n      const result = await fetch(\"http://localhost:5000/geolocation\");\r\n      const data = await result.json();\r\n      handleSuccess(data);\r\n    };\r\n\r\n    fetchGelocation();\r\n  }, [navigator]);\r\n\r\n  return (\r\n    <>\r\n      <Geolocation latitude={latitude} longtitude={longtitude} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeolocationContainer;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  children: string | React.JSX.Element | React.JSX.Element[] | (() => React.JSX.Element);\r\n};\r\n\r\nconst ChildFunction = ({ children }: Props) => {\r\n  if (typeof children === \"function\") {\r\n    return children();\r\n  } else {\r\n    return children;\r\n  }\r\n};\r\n\r\nexport default ChildFunction;\r\n","import ChildFunction from \"components/Utils/ChildFunction\";\r\n\r\nconst ChildFunctionDemo = () => {\r\n  return <ChildFunction>{() => <div>Demo</div>}</ChildFunction>;\r\n};\r\nexport default ChildFunctionDemo;","import { ChangeEvent, FC, FormEvent, FormEventHandler, useState } from \"react\";\r\nimport { GeolocationInterface } from \"types/SystemTypes\";\r\n\r\nconst Unhandled: FC<GeolocationInterface> = ({latitude, longtitude}:GeolocationInterface)=>{\r\n    const [values, setValues] = useState({firstName:'',lastName:''});\r\n\r\n    const handleChange = (e: {target: {name:string, value:string}})=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    };\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>)=>{\r\n        event.preventDefault();\r\n        console.log(values);\r\n    };\r\n    return (<form onSubmit={handleSubmit}>\r\n        <h3>Lantitude: {latitude}. Longtitude: {longtitude}</h3>\r\n        <label>First Name: <input name=\"firstName\" type=\"text\" onChange={handleChange} /></label>\r\n        <label>Last Name: <input name=\"lastName\" type=\"text\" onChange={handleChange} /></label>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </form>);\r\n};\r\n\r\nexport default Unhandled;","import { FormEvent, useState } from \"react\";\r\n\r\nconst Handled = ()=>{\r\n    const [values, setValues] = useState({firstName:'',lastName:''});\r\n\r\n    const handleChange = (e: {target: {name:string, value:string}})=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]:e.target.value\r\n        });\r\n    };\r\n    const handleSubmit = (event: FormEvent<HTMLFormElement>)=>{\r\n        event.preventDefault();\r\n        console.log(values);\r\n    };\r\n\r\n    return (<form onSubmit={handleSubmit}>\r\n        <label>First Name: <input defaultValue={\"First name\"} value={values.firstName} name=\"firstName\" type=\"text\" onChange={handleChange} /></label>\r\n        <label>Last Name: <input defaultValue={\"Last name\"} value={values.lastName} name=\"lastName\" type=\"text\" onChange={handleChange} /></label>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n    </form>); \r\n};\r\nexport default Handled;","import { useRef } from \"react\";\r\n\r\nconst Refs = ()=>{\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const setFocus = ()=>{\r\n        inputRef.current!.focus();\r\n    };\r\n\r\n    return (<>\r\n    <input type=\"text\" ref={inputRef}/>\r\n    <button onClick={setFocus}>Focus</button>\r\n    </>);\r\n};\r\n\r\nexport default Refs;","import { useState } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport './css/transition.css';\r\nconst Transition = () => {\r\n  const [items, setItems] = useState([\"Item 1\", \"Item 2\", \"Item 3\"]);\r\n  const removeItem = (itemName: string) => {\r\n    setItems([...items.filter((_) => _ !== itemName)]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TransitionGroup>\r\n        {items.map((_, index) => {\r\n          return (\r\n            <CSSTransition key={index} timeout={5000} classNames=\"item\">\r\n              <div>\r\n                {_}\r\n                <button onClick={() => removeItem(_)}>Remove</button>\r\n              </div>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transition;\r\n","import { FC } from \"react\";\r\nimport { SvgProperty } from \"types/SystemTypes\";\r\n\r\nconst SvgTest: FC<SvgProperty> = ({ width, height }: SvgProperty) => {\r\n  return (\r\n    <>\r\n      <svg height={height} width={width}>\r\n        <circle cx={100} cy={100} r={20} fill=\"red\" />\r\n        <rect x={125} y={100} width={50} height={50} fill=\"blue\" />\r\n      </svg>\r\n\r\n\r\n      <object type=\"image/svg+xml\" data=\"../example.svg\">\r\n        <param name=\"roof\" value=\"#roof\" />\r\n      </object>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SvgTest;\r\n","import { FC, memo, useEffect } from \"react\";\r\nimport { Task } from \"./Types\";\r\ntype Props = {\r\n  task: Task;\r\n  handleDelete: any;\r\n};\r\nconst TaskComponent: FC<Props> = ({\r\n  task: { name, done },\r\n  handleDelete,\r\n}: Props) => {\r\n  useEffect(() => {\r\n    console.log(\"task refresh\");\r\n  });\r\n  return (\r\n    <>\r\n      <div className={done ? \"task-done\" : \"\"}>{name}</div>\r\n      <button onClick={() => handleDelete(name)}>Delete</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(TaskComponent);\r\n","import { FC, memo, useEffect } from \"react\";\r\nimport { Task } from \"./Types\";\r\nimport TaskComponent from \"./TaskComponent\";\r\ntype Props = {\r\n  tasks: Task[];\r\n  handleDelete: any\r\n};\r\nconst TaskList: FC<Props> = ({ tasks, handleDelete }: Props) => {\r\n  useEffect(() => {\r\n    console.log(\"Task list refresh\");\r\n  });\r\n  return (\r\n    <>\r\n      <ul>\r\n        {tasks.map((_, index) => (\r\n          <li key={index}>\r\n            <TaskComponent task={_} handleDelete={handleDelete} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(TaskList);\r\n","import { ChangeEvent, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Task } from \"./Types\";\r\nimport TaskList from \"./TaskListComponent\";\r\n\r\nconst ToDoMainComponent = () => {\r\n  useEffect(() => console.log(\"Main component....\"));\r\n  const initialTasks: Task[] = [\r\n    { name: \"Go to school\", done: false },\r\n    { name: \"Birthday party\", done: false },\r\n  ];\r\n  const [tasks, setTasks] = useState<Task[]>(initialTasks);\r\n  const [task, setTask] = useState<string>();\r\n  const [term, setTerm] = useState<string>();\r\n\r\n  const changeTask = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const submitTask = () => {\r\n    setTerm(\"\");\r\n    setTasks([...tasks, { name: task, done: false }]);\r\n    setTask(\"\");\r\n  };\r\n\r\n  const searchTask = () => {\r\n    setTerm(task);\r\n  };\r\n\r\n  const todolist = useMemo(() => {\r\n    return tasks.filter((currentTask: Task) => {\r\n      console.log(\"Filter running!\");\r\n      if (term) {\r\n        return currentTask.name?.toLowerCase().includes(term!);\r\n      }\r\n      return true;\r\n    });\r\n  }, [term, tasks]);\r\n\r\n  const handleDelete = useCallback(\r\n    (name: string) => {\r\n      setTasks(\r\n        tasks.filter((v) => v.name?.toLowerCase() !== name.toLocaleLowerCase())\r\n      );\r\n    },\r\n    [tasks]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={\"\"}\r\n          value={task}\r\n          onChange={changeTask}\r\n        />\r\n        <button onClick={submitTask}>Save</button>\r\n        <button onClick={searchTask}>Search</button>\r\n      </div>\r\n      <TaskList tasks={todolist} handleDelete={handleDelete} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoMainComponent;\r\n","import { UserProfileInterface } from \"types/SystemTypes\";\r\nimport { FC } from \"react\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport { Flex } from \"antd\";\r\nimport GeolocationContainer from \"./Geolocation/GeolocationContainer\";\r\nimport ChildFunctionDemo from \"./ChildFunction/ChildFunctionDemo\";\r\nimport Unhandled from \"./Form/Unhandled\";\r\nimport Handled from \"./Form/Handled\";\r\nimport Refs from \"./Form/Refs\";\r\nimport Transition from \"./Form/Transition\";\r\nimport SvgTest from \"./Form/SvgTest\";\r\nimport TaskComponent from \"./Hooks/todo/TaskComponent\";\r\nimport ToDoMain from \"./Hooks/todo/ToDoMainComponent\";\r\nimport ToDoMainComponent from \"./Hooks/todo/ToDoMainComponent\";\r\nconst DemoIndex: FC = () => {\r\n  const users: UserProfileInterface[] = [\r\n    {\r\n      name: \"John\",\r\n      photo: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\",\r\n      age: 40,\r\n      address: \"上海\",\r\n    },\r\n\r\n    {\r\n      name: \"Jolly\",\r\n      photo: \"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\",\r\n      age: 12,\r\n      address: \"上海\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Flex gap={\"large\"}>\r\n        {users.map((_, index) => (\r\n          <UserProfile key={index} {..._} />\r\n        ))}\r\n      </Flex>\r\n\r\n      <GeolocationContainer />\r\n\r\n      <ChildFunctionDemo />\r\n\r\n      <Unhandled latitude={1} longtitude={2}/>\r\n\r\n      <Handled />\r\n\r\n      <Refs />\r\n\r\n      <Transition/>\r\n\r\n      <SvgTest height={200} width={200} />\r\n      <ToDoMainComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoIndex;\r\n"],"names":["Meta","Card","_ref","name","photo","age","address","_jsx","_Fragment","children","title","style","width","bordered","cover","alt","src","description","latitude","longtitude","_jsxs","GeolocationContainer","setLatitude","useState","setLongtitude","useEffect","async","result","fetch","longitude","handleSuccess","json","fetchGelocation","navigator","Geolocation","ChildFunctionDemo","ChildFunction","values","setValues","firstName","lastName","handleChange","e","target","value","onSubmit","event","preventDefault","console","log","type","onChange","Handled","defaultValue","Refs","inputRef","useRef","ref","onClick","setFocus","current","focus","Transition","items","setItems","TransitionGroup","map","_","index","CSSTransition","timeout","classNames","removeItem","itemName","filter","height","cx","cy","r","fill","x","y","data","TaskComponent","task","done","handleDelete","className","memo","TaskList","tasks","ToDoMainComponent","setTasks","setTask","term","setTerm","todolist","useMemo","currentTask","_currentTask$name","toLowerCase","includes","useCallback","v","_v$name","toLocaleLowerCase","submitTask","searchTask","DemoIndex","Flex","gap","UserProfile","Unhandled","SvgTest"],"sourceRoot":""}