{"version":3,"file":"static/js/630.311d302f.chunk.js","mappings":"oKAwBA,EAtBiB,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KACZC,GAAUC,EAAAA,EAAAA,UAIhB,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAQG,QAAQC,UAAYL,EAAKC,OACnC,GAAG,CAACD,KAEFM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAA6BC,MAAO,CAAEC,UAAW,QAASH,UACvEI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWD,SAAA,EACxBI,EAAAA,EAAAA,MAAA,MAAIH,UAAU,QAAOD,SAAA,CAAC,SAAER,EAAKa,MAAM,aACnCD,EAAAA,EAAAA,MAAA,OAAKH,UAAU,eAAcD,SAAA,CAAC,sBAAKR,EAAK,oBAKxCM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,UAAUK,IAAKb,UAKxC,C,4JCsCA,UApDc,WACZ,IAAAc,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAC1BnB,EAAAA,EAAAA,YAAU,WACR,IAAMsB,EAAU,eAAA1B,GAAA2B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACA,OAAjBV,GAAW,GAAMQ,EAAAE,KAAA,GACIC,EAAAA,EAAAA,GAAIC,EAAAA,GAAeC,UAAW,CACjD,CACEC,IAAK,UACLC,MAAO,UAER,KAAD,GALIT,EAAME,EAAAQ,MAOLC,MAAK,SAACC,EAAGC,GACd,OAAO,IAAIC,KAAKD,EAAE,iBAAmB,IAAIC,KAAKF,EAAE,gBAClD,IACAtB,EAASU,GACTN,GAAW,GAAO,wBAAAQ,EAAAa,OAAA,GAAAhB,EAAA,KACnB,kBAde,OAAA9B,EAAA+C,MAAA,KAAAC,UAAA,KAgBhBtB,GACF,GAAG,IAKH,OACEb,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAACC,YAAY,SACnB1B,GACCX,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,CAACC,QAAM,EAACC,WAAS,KAC1B9C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,CAACC,QAAM,EAACC,WAAS,KAC1B9C,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,CAACC,QAAM,EAACC,WAAS,QAG5BxC,EAAAA,EAAAA,MAAAL,EAAAA,SAAA,CAAAC,SAAA,CACG,KACDF,EAAAA,EAAAA,KAAC+C,EAAAA,GAAa,CACZC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,WACdC,UAAWxC,EAAMyC,OACjBC,SAAU,EAAErD,SAnBJ,SAAHsD,GAAmB,IAAbC,EAAKD,EAALC,MACnB,OAAOzD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAQ,CAAChE,KAAMmB,EAAM4C,IAC/B,SAyBF,C","sources":["components/Others/Post/PostView.jsx","components/Others/Post/PostsContainer.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport './style.css';\nconst PostView = ({ post }) => {\n  const content = useRef();\n  useEffect(() => {\n    content.current.innerHTML = post.content;\n  }, [post]);\n  return (\n    <>\n      <div className=\"container py-5 text-center\" style={{ marginTop: '10px' }}>\n        <div className=\"post-body\">\n          <h2 className=\"title\">《{post.title}》</h2>\n          <div className=\"created-time\">发表于 {post['created-time']}</div>\n          {/* <div className=\"cover\">\n            <img src={post['cover-image']} />\n          </div> */}\n\n          <div className=\"content\" ref={content}></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostView;\n","import { FixedSizeList } from 'react-window';\nimport PostView from './PostView';\nimport { useEffect, useState } from 'react';\nimport { get } from 'utils/api';\nimport { AdminConstants } from 'utils/constants';\nimport TopNav from '../Head/TopNav';\nimport { Skeleton } from 'antd';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const result = await get(AdminConstants.POSTS_URI, [\n        {\n          key: 'useMock',\n          value: 'true',\n        },\n      ]);\n\n      result.sort((a, b) => {\n        return new Date(b['created-time']) - new Date(a['created-time']);\n      });\n      setPosts(result);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  const renderRow = ({ index }) => {\n    return <PostView post={posts[index]} />;\n  };\n  return (\n    <div>\n      <TopNav activeIndex=\"post\" />\n      {loading ? (\n        <div>\n          <Skeleton avatar paragraph />\n          <Skeleton avatar paragraph />\n          <Skeleton avatar paragraph />\n        </div>\n      ) : (\n        <>\n          {' '}\n          <FixedSizeList\n            height={window.innerHeight}\n            width={window.innerWidth}\n            itemCount={posts.length}\n            itemSize={1}\n          >\n            {renderRow}\n          </FixedSizeList>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"names":["_ref","post","content","useRef","useEffect","current","innerHTML","_jsx","_Fragment","children","className","style","marginTop","_jsxs","title","ref","_useState","useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","loading","setLoading","fetchPosts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","get","AdminConstants","POSTS_URI","key","value","sent","sort","a","b","Date","stop","apply","arguments","TopNav","activeIndex","Skeleton","avatar","paragraph","FixedSizeList","height","window","innerHeight","width","innerWidth","itemCount","length","itemSize","_ref2","index","PostView"],"sourceRoot":""}