{"version":3,"file":"static/js/504.cdff8bde.chunk.js","mappings":"8OA+CA,UAvCsB,WACpB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAqB1B,OAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAjBZ,GAAW,GAAMU,EAAAE,KAAA,GACEC,EAAAA,EAAAA,GAAIC,EAAAA,GAAcC,SAAU,CAC7C,CACEC,IAAK,UACLC,MAAO,QAET,CACED,IAAK,KACLC,MAAO5B,KAER,KAAD,EATEmB,EAAME,EAAAQ,KAUVlB,GAAW,GACXJ,EAAQY,GAAQ,wBAAAE,EAAAS,OAAA,GAAAZ,EAAA,KACjB,kBAdY,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAebnB,GACF,GAAG,KAGDoB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,YAAY,SACnB5B,GACCuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACC,QAAM,EAACC,WAAS,KAC1BL,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACC,QAAM,EAACC,WAAS,KAC1BL,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACC,QAAM,EAACC,WAAS,QAG5BL,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAACpC,KAAMA,MAIxB,C,kFCtBA,EAtBiB,SAAHQ,GAAkB,IAAZR,EAAIQ,EAAJR,KACZqC,GAAUC,EAAAA,EAAAA,UAIhB,OAHAhC,EAAAA,EAAAA,YAAU,WACR+B,EAAQE,QAAQC,UAAYxC,EAAKqC,OACnC,GAAG,CAACrC,KAEF8B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKW,UAAU,6BAA6BC,MAAO,CAAEC,UAAW,QAASd,UACvEF,EAAAA,EAAAA,MAAA,OAAKc,UAAU,YAAWZ,SAAA,EACxBF,EAAAA,EAAAA,MAAA,MAAIc,UAAU,QAAOZ,SAAA,CAAC,SAAE7B,EAAK4C,MAAM,aACnCjB,EAAAA,EAAAA,MAAA,OAAKc,UAAU,eAAcZ,SAAA,CAAC,sBAAK7B,EAAK,oBAKxC8B,EAAAA,EAAAA,KAAA,OAAKW,UAAU,UAAUI,IAAKR,UAKxC,C","sources":["components/Others/Post/PostContainer.jsx","components/Others/Post/PostView.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { get } from 'utils/api';\nimport { MainConstants } from 'utils/constants';\nimport TopNav from '../Head/TopNav';\nimport PostView from './PostView';\nimport { Skeleton } from 'antd';\n\nconst PostContainer = () => {\n  const { id } = useParams();\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    var fetchPost = async () => {\n      setLoading(true);\n      var result = await get(MainConstants.POST_URL, [\n        {\n          key: 'useMock',\n          value: 'true',\n        },\n        {\n          key: 'id',\n          value: id,\n        },\n      ]);\n      setLoading(false);\n      setPost(result);\n    };\n    fetchPost();\n  }, []);\n\n  return (\n    <>\n      <TopNav activeIndex=\"post\" />\n      {loading ? (\n        <>\n          <Skeleton avatar paragraph />\n          <Skeleton avatar paragraph />\n          <Skeleton avatar paragraph />\n        </>\n      ) : (\n        <PostView post={post} />\n      )}\n    </>\n  );\n};\nexport default PostContainer;\n","import { useEffect, useRef } from 'react';\nimport './style.css';\nconst PostView = ({ post }) => {\n  const content = useRef();\n  useEffect(() => {\n    content.current.innerHTML = post.content;\n  }, [post]);\n  return (\n    <>\n      <div className=\"container py-5 text-center\" style={{ marginTop: '10px' }}>\n        <div className=\"post-body\">\n          <h2 className=\"title\">《{post.title}》</h2>\n          <div className=\"created-time\">发表于 {post['created-time']}</div>\n          {/* <div className=\"cover\">\n            <img src={post['cover-image']} />\n          </div> */}\n\n          <div className=\"content\" ref={content}></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostView;\n"],"names":["id","useParams","_useState","useState","_useState2","_slicedToArray","post","setPost","_useState3","_useState4","loading","setLoading","useEffect","fetchPost","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","get","MainConstants","POST_URL","key","value","sent","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","TopNav","activeIndex","Skeleton","avatar","paragraph","PostView","content","useRef","current","innerHTML","className","style","marginTop","title","ref"],"sourceRoot":""}