{"version":3,"file":"static/js/829.943f535f.chunk.js","mappings":"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","sources":["Data/Chat.js","Provider/ChatProvider.jsx","Hooks/UseLogin.js","components/Ebay/ChatLogin/GithubUser.jsx","components/Ebay/Chat/Chat-Header/index.jsx","components/Ebay/Chat/Messages/BotMessage/Welcome/index.jsx","components/Ebay/Chat/Messages/BotMessage/PureMessage/index.jsx","components/Ebay/Chat/Messages/BotMessage/EsentialMessage/index.jsx","components/Ebay/Chat/Messages/BotMessage/InqueryMessage/index.jsx","components/Ebay/Chat/Messages/BotMessage/ResultMessage/index.jsx","components/Ebay/ChatLogin/SearchForm.jsx","components/Ebay/Chat/Messages/BotMessage/LoginMessage/index.jsx","components/Ebay/Chat/Messages/BotMessage/index.jsx","components/Ebay/Chat/Messages/User/index.jsx","components/Ebay/Chat/Chat-Body/index.jsx","components/Ebay/Chat/Chat-Messaging/index.jsx","components/Ebay/Chat/index.jsx","components/Others/Contacts/Index.jsx"],"sourcesContent":["const messages = [\n  {\n    type: \"bot\",\n    seq: 0,\n    message: \"欢迎光临，请使用您的Github账号登录.\",\n  },\n];\n\nexport default messages;\n","import { createContext, useContext, useState } from \"react\";\nimport messages from \"../Data/Chat\";\n\nconst ChatContext = createContext();\nexport const useChats = () => useContext(ChatContext);\n\nconst ChatProvider = ({ children }) => {\n  const [data, setChats] = useState(messages);\n\n  const onAddNewMessage = ({\n    message,\n    chatId,\n    seq,\n    type,\n    esentials,\n    selected,\n  }) => {\n    setChats([\n      ...data,\n      {\n        chatId,\n        seq,\n        message,\n        type,\n        esentials,\n        selected,\n      },\n    ]);\n  };\n  const onAddNewMessages = (messages) => {\n    setChats(messages);\n  };\n\n  const clearMessages = () => {\n    setChats([]);\n  };\n\n  const [login, setLogin] = useState(\"\");\n  const onLogin = (login) => {\n    setLogin(login);\n  };\n\n  return (\n    <ChatContext.Provider\n      value={{\n        data,\n        onAddNewMessage,\n        onAddNewMessages,\n        clearMessages,\n        login,\n        onLogin,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport default ChatProvider;\n","import { useEffect, useState } from \"react\";\n\nvar UseLogin = (uri) => {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(uri, {\n      headers: {},\n    })\n      .then((response) => {\n        var a = response.json();\n        return a;\n      })\n      .then((d) => {\n        setData(d);\n      })\n      .then(() => setLoading(false))\n      .catch(setError);\n  }, [uri]);\n\n  return { data, error, loading };\n};\n\nexport default UseLogin;\n","import UseLogin from \"../../../Hooks/UseLogin\";\n\nconst GithubUser = ({ login }) => {\n  if (!login) return null;\n  var { data, loading, error } = UseLogin(\n    `https://api.github.com/users/${login}`,\n  );\n  if (loading) return <h1>Loading...</h1>;\n  if (error) return <pre>{JSON.stringify(error, null, 2)}</pre>;\n  // if data is not null then show the data\n  if (data) {\n    return (\n      <div style={{ marginRight: \"50px\" }}>\n        <p style={{ float: \"right\" }}>\n          <img\n            style={{ width: \"30px\", lineHeight: \"30px\", borderRadius: \"50%\" }}\n            alt={data ? data.login : \"\"}\n            src={data ? data.avatar_url : \"\"}\n          />\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default GithubUser;\n","import \"./style.css\";\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\n// import { EbayIcon } from '@ebay/ui-core-react/ebay-icon';\nimport \"@ebay/skin/icon\";\nimport GithubUser from \"../../ChatLogin/GithubUser\";\nimport { useChats } from \"../../../../Provider/ChatProvider\";\nimport { useEffect } from \"react\";\n\nconst ChatHeader = () => {\n  const { login } = useChats();\n\n  useEffect(() => {\n    console.log(login);\n  }, [login]);\n  return (\n    <>\n      <div className=\"chat-header\">\n        <div className=\"chat-recipient\">{/* <h3>luso.ai</h3> */}</div>\n        <div className=\"chat-menu\">\n          <div style={{ float: \"left\" }}>\n            <GithubUser login={login} />\n          </div>\n        </div>\n      </div>\n\n      <EbaySvg />\n    </>\n  );\n};\n\nexport default ChatHeader;\n","import { useState } from \"react\";\nimport \"./style.css\";\n\nimport { DatePicker } from \"antd\";\nconst Welcome = ({ message, addNewMessage }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const dateFormatList = [\"DD/MM/YYYY\", \"DD/MM/YY\", \"DD-MM-YYYY\", \"DD-MM-YY\"];\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    addNewMessage(date.format(\"DD-MM-YYYY\"));\n  };\n  return (\n    <div>\n      <p>{message}</p>\n      <DatePicker\n        className=\"dt-picker\"\n        onChange={handleDateChange}\n        value={selectedDate}\n        format={dateFormatList}\n      />\n    </div>\n  );\n};\n\nexport default Welcome;\n","import \"./style.css\";\n\nconst PureMessage = ({ message }) => {\n  return (\n    <p>\n      <div>{message}</div>\n    </p>\n  );\n};\n\nexport default PureMessage;\n","import { useState } from \"react\";\nimport \"./style.css\";\n\nimport { EbayButton } from \"@ebay/ui-core-react/ebay-button\";\n// import skin for ebay button\nimport \"@ebay/skin/button\";\n// import { useChats } from '../../../../../../Provider/ChatProvider';\nconst EsentialMessage = ({ message, keyName, esentials, readyFn }) => {\n  const [buttons, setButtons] = useState(\n    esentials.map(() => {\n      return { priority: \"tertiary\" };\n    }),\n  );\n\n  const handleClick = (index) => {\n    const newButtons = [...buttons];\n    newButtons[index].priority =\n      newButtons[index].priority == \"primary\" ? \"tertiary\" : \"primary\";\n    setButtons(newButtons);\n    readyFn(index, keyName);\n  };\n  return (\n    <>\n      <p>{message}</p>\n      <div className=\"message\">\n        {esentials.map((esential, i) => (\n          <EbayButton\n            key={i}\n            onClick={() => handleClick(i)}\n            priority={buttons[i].priority}\n            style={{ margin: \"3px\" }}\n          >\n            {esential}\n          </EbayButton>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default EsentialMessage;\n","import \"./style.css\";\n\n// import { EbayCtaButton } from '@ebay/ui-core-react/ebay-cta-button';\n// import { EbayButton } from '@ebay/ui-core-react/ebay-button';\nimport \"@ebay/skin/button\";\nimport \"@ebay/skin/icon\";\nimport { EbayIcon } from \"@ebay/ui-core-react/ebay-icon\";\n\nconst InquireMessage = ({ message, next }) => {\n  return (\n    <p>\n      <div>\n        <span style={{ marginRight: \"50px\" }}>{message}</span>\n      </div>\n      <div style={{ marginTop: \"5px\" }}>\n        <span>\n          <i style={{ textDecoration: \"underline\", color: \"\" }}>Yes</i>\n          &nbsp;&nbsp;\n          <EbayIcon name=\"face-neutral24\" />\n        </span>\n\n        <span style={{ marginLeft: \"40px\" }} onClick={next}>\n          <i style={{ textDecoration: \"underline\" }}>No, that is it for now</i>\n          <EbayIcon name=\"on-the-way24\" />\n        </span>\n      </div>\n    </p>\n  );\n};\n\nexport default InquireMessage;\n","import \"./style.css\";\n\nconst ResultMessage = ({ message }) => {\n  return (\n    <div className=\"message\" dangerouslySetInnerHTML={{ __html: message }} />\n  );\n};\n\nexport default ResultMessage;\n","// create a function component\n// import { EbayIcon } from '@ebay/ui-core-react/ebay-icon';\nimport { EbayTextbox } from \"@ebay/ui-core-react/ebay-textbox\";\nimport \"@ebay/skin/icon\";\nimport \"@ebay/skin/textbox\";\n\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\nimport { EbayButton } from \"@ebay/ui-core-react/ebay-button\";\nimport { useChats } from \"../../../Provider/ChatProvider\";\nimport { useState } from \"react\";\nconst SearchForm = ({ afterLogin }) => {\n  const { onLogin } = useChats();\n  const [userName, setUserName] = useState();\n  const search = () => {\n    onLogin(userName);\n    afterLogin(userName);\n  };\n\n  return (\n    <>\n      <div>\n        <EbayTextbox\n          placeholder=\"test\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n        <EbayButton onClick={() => search()}>\n          登录\n          {/* <EbayIcon name=\"arrowRight16\" /> */}\n        </EbayButton>\n      </div>\n      <EbaySvg />\n    </>\n  );\n};\nexport default SearchForm;\n","import SearchForm from \"../../../../ChatLogin/SearchForm\";\nimport \"./style.css\";\n\nconst LoginMessage = ({ text, afterLogin }) => {\n  return (\n    <div className=\"login-message\">\n      <div>\n        <p>{text}</p>\n        <div className=\"seach-form\">\n          <SearchForm afterLogin={afterLogin} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginMessage;\n","import { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\nimport { EbayIcon } from \"@ebay/ui-core-react/ebay-icon\";\nimport \"@ebay/skin/icon\";\n// import { DatePicker } from 'antd';\nimport { useChats } from \"../../../../../Provider/ChatProvider\";\nimport Welcome from \"./Welcome\";\nimport PureMessage from \"./PureMessage\";\nimport { get } from \"../../../../../utils/api\";\nimport { ChatConstants, USE_MOCK } from \"../../../../../utils/constants\";\nimport EsentialMessage from \"./EsentialMessage\";\nimport InquireMessage from \"./InqueryMessage\";\nimport ResultMessage from \"./ResultMessage\";\nimport LoginMessage from \"./LoginMessage\";\n// const { RangePicker } = DatePicker;\n\nconst BotMessage = ({ message, keyName, seq, type, esentials }) => {\n  var { data, onAddNewMessage, onAddNewMessages } = useChats();\n  var useMock;\n  useEffect(() => {\n    // Code to run after the component has mounted\n    const params = new URLSearchParams(window.location.search);\n    useMock = params.get(USE_MOCK);\n  }, []);\n\n  var [content, setContent] = useState({});\n  useEffect(() => {\n    if (content && Object.keys(content).length > 0) {\n      onAddNewMessage(content);\n    }\n  }, [content]);\n\n  const addNewMessage = async (message) => {\n    setContent({\n      message,\n      seq: 2,\n      type: \"user\",\n    });\n\n    // send birthday to api\n    var nextResponse = await get(`${ChatConstants.BIRTHDAY_URI}`, [\n      {\n        key: ChatConstants.BIRTHDAY_PARAM_KEY,\n        value: message.replace(/-/g, \"/\"),\n      },\n      { key: USE_MOCK, value: useMock },\n    ]);\n\n    setContent({\n      message: nextResponse.message,\n      chatId: nextResponse.chatId,\n      seq: 3,\n      type: \"bot\",\n    });\n\n    setTimeout(() => {\n      setContent({\n        message: nextResponse.question,\n        chatId: nextResponse.chatId,\n        seq: 4,\n        type: \"bot\",\n        selected: [],\n        esentials: nextResponse.data.answers,\n      });\n    }, 2000);\n  };\n\n  // usestate for esentials\n  const readyFn = (index) => {\n    const hasNext = data.some((item) => item.seq === 5);\n    if (!hasNext) {\n      setContent({\n        message: \"Do you want to add more options?\",\n        seq: 5,\n        type: \"bot\",\n      });\n    }\n\n    data.find((item) => item.seq === 4).selected.push(index);\n  };\n\n  const continueEsentialDrill = async () => {\n    var step = data.find((item) => item.seq === 4);\n    var selectedEsentials = step.selected;\n\n    var essentialNames = [];\n    step.esentials.forEach((item, index) => {\n      if (selectedEsentials.includes(index)) {\n        essentialNames.push(item);\n      }\n    });\n\n    // send api call to get the next question\n    var nextResponse = await get(`${ChatConstants.DRILL_URL}`, [\n      { key: ChatConstants.DRILL_PARAM_KEY, value: essentialNames.join(\",\") },\n      { key: \"chatId\", value: step.chatId },\n      { key: ChatConstants.USE_MOCK, value: useMock },\n    ]);\n\n    var targets = nextResponse.data.map((item) => {\n      return {\n        message: item.question,\n        seq: 6,\n        keyName: item.key,\n        type: \"bot\",\n        esentials: item.answers,\n        selected: [],\n      };\n    });\n\n    onAddNewMessages([...data, ...targets]);\n  };\n\n  const readyFnDrill = (index, keyName) => {\n    const hasNext = data.some((item) => item.seq === 7);\n    if (!hasNext) {\n      setContent({\n        message:\n          \"Are there any other types of products you’re interested in today?\",\n        seq: 7,\n        type: \"bot\",\n      });\n    }\n\n    data\n      .find((item) => item.seq === 6 && item.keyName === keyName)\n      .selected.push(index);\n  };\n\n  const finishDrill = () => {\n    var final = [];\n    // clean the data\n    data\n      .filter((item) => item.seq === 6 && item.keyName)\n      .map((current) => {\n        // current.keyName = current.keyName;\n        current.selected.map((v) => {\n          var c = final.find((item) => item.key === current.keyName);\n          if (!c) {\n            final.push({ key: current.keyName, value: [current.esentials[v]] });\n          } else {\n            c.value.push(current.esentials[v]);\n          }\n          return c;\n        });\n      });\n\n    // send api call to get the next question\n    // currently we will consume a result\n\n    setContent({\n      message: `<div>\n        <div>Based on your preferences we have curated a selection of pre-loved products easily delivered or in your area. </div>\n        <div style=\"margin: 10px\"><a href=\"http://localhost:8099/build/target.html\">Shop now!</a></div>\n        <div>\n        Thanks for thinking pre-loved!\n        </div>\n        </div>`,\n      seq: 8,\n      type: \"bot\",\n    });\n  };\n\n  const afterLogin = (userName) => {\n    setContent({\n      message: `Hey ${userName}, Please enter the due/birth date of your little one to receive tailored buying & selling suggestions for pre-loved children's products.`,\n      seq: 1,\n      type: \"bot\",\n    });\n  };\n\n  return (\n    <>\n      <div className=\"bot-message\">\n        <div className=\"ai-icon\">\n          <EbayIcon name=\"aiSpectrumFilled24Colored\" />\n        </div>\n        {/* Login */}\n        {seq === 0 ? (\n          <LoginMessage text={message} afterLogin={afterLogin} />\n        ) : null}\n\n        {/* Birthday */}\n        {seq === 1 ? (\n          <Welcome\n            message={message}\n            seq={seq}\n            type={type}\n            addNewMessage={addNewMessage}\n          />\n        ) : null}\n        {/* Greeting */}\n        {seq === 3 ? <PureMessage message={message} /> : null}\n        {/* Esential categories */}\n        {seq === 4 ? (\n          <EsentialMessage\n            message={message}\n            esentials={esentials}\n            readyFn={readyFn}\n          />\n        ) : null}\n        {/* Inquery */}\n        {seq === 5 ? (\n          <InquireMessage message={message} next={continueEsentialDrill} />\n        ) : null}\n        {/* Drill */}\n        {seq === 6 ? (\n          <EsentialMessage\n            message={message}\n            keyName={keyName}\n            esentials={esentials}\n            readyFn={readyFnDrill}\n          />\n        ) : null}\n\n        {/* Inquery */}\n        {seq === 7 ? (\n          <InquireMessage message={message} next={finishDrill} />\n        ) : null}\n\n        {/* Result */}\n        {seq === 8 ? <ResultMessage message={message} /> : null}\n      </div>\n      <EbaySvg />\n    </>\n  );\n};\n\nexport default BotMessage;\n","import \"./style.css\";\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\n// import { EbayIcon } from '@ebay/ui-core-react/ebay-icon';\nimport \"@ebay/skin/icon\";\n\nconst UserMessage = ({ message }) => {\n  return (\n    <>\n      <div className=\"user-message\">\n        <div>{message}</div>\n      </div>\n      <EbaySvg />\n    </>\n  );\n};\n\nexport default UserMessage;\n","import \"./style.css\";\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\nimport \"@ebay/skin/icon\";\nimport BotMessage from \"../Messages/BotMessage\";\nimport UserMessage from \"../Messages/User\";\n\nconst ChatBody = ({ messages }) => {\n  return (\n    <>\n      <div className=\"chat-messages\">\n        {messages.map((message) => {\n          if (message.type === \"bot\") {\n            return (\n              <div key={message.seq} className=\"chat-message\">\n                <BotMessage {...message} />\n              </div>\n            );\n          } else {\n            return (\n              <div key={message.seq} className=\"chat-message\">\n                <UserMessage {...message} />\n              </div>\n            );\n          }\n        })}\n      </div>\n      <EbaySvg />\n    </>\n  );\n};\n\nexport default ChatBody;\n","import \"./style.css\";\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\nimport { EbayIcon } from \"@ebay/ui-core-react/ebay-icon\";\nimport \"@ebay/skin/icon\";\nimport { useChats } from \"../../../../Provider/ChatProvider\";\n\nconst ChatMessaging = () => {\n  const { data, onAddNewMessage, onAddNewMessages } = useChats();\n  const addNewNessage = (message) => {\n    onAddNewMessage({\n      message,\n      seq: data.length + 1,\n      type: \"user\",\n    });\n\n    if (data.length == 1) {\n      setTimeout(() => {\n        onAddNewMessages([\n          {\n            message: \"Greetings\",\n            seq: 3,\n            type: \"bot\",\n          },\n        ]);\n      }, 1000);\n    }\n\n    // clear the data and resend the essentials\n  };\n\n  var handleKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      addNewNessage(e.target.value);\n      e.target.value = \"\";\n    }\n  };\n\n  return (\n    <>\n      <div className=\"chat-form\">\n        <input\n          type=\"text\"\n          onKeyDown={handleKeyDown}\n          className=\"chat-input\"\n          id=\"user-input\"\n          placeholder=\"Ask me anything...\"\n        />\n        <label htmlFor=\"voice-input\" className=\"voice-upload\">\n          <EbayIcon name=\"microphone16\" />\n        </label>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          capture=\"camera\"\n          id=\"photo-input\"\n          className=\"photo-input\"\n        />\n        <label htmlFor=\"photo-input\" className=\"photo-upload\">\n          <EbayIcon name=\"camera16\" />\n        </label>\n      </div>\n      <EbaySvg />\n    </>\n  );\n};\n\nexport default ChatMessaging;\n","// import { EbayTextbox } from '@ebay/ui-core-react/ebay-textbox'\nimport { EbaySvg } from \"@ebay/ui-core-react/ebay-svg\";\nimport \"@ebay/skin/icon\";\nimport \"./style.css\";\nimport ChatHeader from \"./Chat-Header\";\nimport ChatBody from \"./Chat-Body\";\nimport ChatMessaging from \"./Chat-Messaging\";\nimport { useEffect, useState } from \"react\";\nimport { useChats } from \"../../../Provider/ChatProvider\";\nvar ChatComponent = () => {\n  const { data } = useChats();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    setMessages(data);\n  }, [data]);\n  return (\n    <>\n      <div className=\"chat-window\">\n        <ChatHeader />\n        <ChatBody messages={messages} />\n        <ChatMessaging />\n      </div>\n      <EbaySvg />\n    </>\n  );\n};\nexport default ChatComponent;\n","// import ContactResult from '../components/Contact/Result'\nimport ChatProvider from \"../../../Provider/ChatProvider\";\nimport ChatComponent from \"../../Ebay/Chat\";\n// import BannerWithNav from '../Banner/BannerWithNav';\nimport TopNav from \"../Head/TopNav\";\nconst ContactsComponent = () => {\n  return (\n    <>\n      <div className=\"header\">\n        <TopNav activeIndex=\"contact\" />\n      </div>\n      <section\n        // style={{ marginTop: '-50px' }}\n        className=\"py-5 shadow-sm index-forward\"\n      >\n        {/* <BannerWithNav /> */}\n        <div className=\"container\" style={{ paddingTop: \"0px\" }}>\n          <ChatProvider>\n            <ChatComponent />\n          </ChatProvider>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ContactsComponent;\n"],"names":["type","seq","message","ChatContext","createContext","useChats","useContext","_ref","children","data","setChats","useState","messages","login","setLogin","_jsx","Provider","value","onAddNewMessage","_ref2","chatId","esentials","selected","onAddNewMessages","clearMessages","onLogin","uri","setData","error","setError","loading","setLoading","useEffect","fetch","headers","then","response","json","d","catch","UseLogin","concat","JSON","stringify","style","marginRight","float","width","lineHeight","borderRadius","alt","src","avatar_url","ChatHeader","console","log","_jsxs","_Fragment","className","GithubUser","EbaySvg","addNewMessage","selectedDate","setSelectedDate","DatePicker","onChange","date","format","keyName","readyFn","buttons","setButtons","map","priority","esential","i","EbayButton","onClick","index","newButtons","handleClick","margin","next","marginTop","textDecoration","color","EbayIcon","name","marginLeft","dangerouslySetInnerHTML","__html","afterLogin","userName","setUserName","EbayTextbox","placeholder","e","target","text","SearchForm","useMock","params","URLSearchParams","window","location","search","get","USE_MOCK","content","setContent","Object","keys","length","LoginMessage","Welcome","async","nextResponse","ChatConstants","BIRTHDAY_URI","key","BIRTHDAY_PARAM_KEY","replace","setTimeout","question","answers","PureMessage","EsentialMessage","some","item","find","push","InquireMessage","step","selectedEsentials","essentialNames","forEach","includes","targets","DRILL_URL","DRILL_PARAM_KEY","join","readyFnDrill","finishDrill","final","filter","current","v","c","ResultMessage","BotMessage","UserMessage","ChatMessaging","onKeyDown","keyCode","id","htmlFor","accept","capture","ChatComponent","setMessages","ChatBody","ContactsComponent","TopNav","activeIndex","paddingTop","ChatProvider"],"sourceRoot":""}