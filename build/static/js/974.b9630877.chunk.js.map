{"version":3,"file":"static/js/974.b9630877.chunk.js","mappings":"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","sources":["components/Admin/posts/PostEditView.jsx","components/Admin/posts/PostEditHook.jsx","components/Admin/posts/PostEditContainer.jsx"],"sourcesContent":["import { Form, Input, Upload, Modal } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { EbayButton } from \"@ebay/ui-core-react/ebay-button\";\r\nimport { EbayAlertDialog } from \"@ebay/ui-core-react/ebay-alert-dialog\";\r\nimport { EbayDialogHeader } from \"@ebay/ui-core-react/ebay-dialog-base\";\r\n\r\nimport \"@ebay/skin\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nconst PostEditView = ({\r\n  id,\r\n  title = \"\",\r\n  content = \"\",\r\n  onSavePost,\r\n  onUploadImage,\r\n}) => {\r\n  const onFinish = async () => {\r\n    if (!editorValue) {\r\n      setErrorDialogVisible(true);\r\n      return;\r\n    }\r\n    setSaveDisabled(true);\r\n    var result = await onSavePost(id, postTitle, \"todo\", editorValue);\r\n    if (result && result.id) {\r\n      setSuccessDialogVisible(true);\r\n      setSavedPost(result);\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = () => {\r\n    setErrorDialogVisible(true);\r\n  };\r\n  const [postTitle, setPostTitle] = useState(title);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [, setCoverImageBase64] = useState(\"\");\r\n  const [editorValue, setEditorContent] = useState(content);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [errorDialogVisible, setErrorDialogVisible] = useState(false);\r\n  const [successDialogVisible, setSuccessDialogVisible] = useState(false);\r\n  const [savedPost, setSavedPost] = useState({});\r\n  function handleCancel() {\r\n    setPreviewVisible(false);\r\n  }\r\n\r\n  function handlePreview(file) {\r\n    setPreviewImage(file.thumbUrl);\r\n    setPreviewVisible(true);\r\n  }\r\n\r\n  function handleChange({ fileList: newFileList }) {\r\n    setFileList(newFileList);\r\n    if (newFileList.length > 0) {\r\n      getBase64(newFileList[0].originFileObj).then((data) => {\r\n        setCoverImageBase64(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleTitleChange(e) {\r\n    setPostTitle(e.target.value);\r\n  }\r\n  function handleEditorChange(content) {\r\n    setEditorContent(content);\r\n  }\r\n\r\n  const [saveDisabled, setSaveDisabled] = useState(false);\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  var [form] = useForm();\r\n  useEffect(() => {\r\n    if (id) {\r\n      setPostTitle(title);\r\n      form.setFieldValue(\"title\", title);\r\n      setEditorContent(content);\r\n    }\r\n  }, [id]);\r\n  return (\r\n    <div className=\"container py-5 text-center\">\r\n      <EbayAlertDialog\r\n        open={errorDialogVisible}\r\n        confirmText=\"去补充\"\r\n        onConfirm={() => {\r\n          setErrorDialogVisible(false);\r\n        }}\r\n        a11yClosetext=\"Close\"\r\n      >\r\n        <EbayDialogHeader>请输入完整字段</EbayDialogHeader>\r\n        <p>所有字段均为必填项</p>\r\n      </EbayAlertDialog>\r\n\r\n      <EbayAlertDialog\r\n        open={successDialogVisible}\r\n        confirmText=\"跳转到文章列表\"\r\n        onConfirm={() => {\r\n          window.location.href = `/post/${savedPost.id}`;\r\n        }}\r\n        a11yClosetext=\"Close\"\r\n      >\r\n        <EbayDialogHeader>保存成功🎉</EbayDialogHeader>\r\n        <p>保存成功，点击到文章列表查看所有文章。</p>\r\n      </EbayAlertDialog>\r\n      <Form\r\n        className=\"post-form\"\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n        form={form}\r\n      >\r\n        <div>\r\n          <Form.Item\r\n            label=\"标题\"\r\n            name=\"title\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your title!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              value={postTitle}\r\n              onChange={handleTitleChange}\r\n              placeHolder=\"请输入文章标题...\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <div style={{ display: \"none\" }}>\r\n          <Form.Item label=\"封面\" name=\"cover\">\r\n            <div className=\"cover\">\r\n              <Upload\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n              >\r\n                {fileList.length < 1 && \"+ 上传封面\"}\r\n              </Upload>\r\n              <Modal\r\n                visible={previewVisible}\r\n                title=\"Preview\"\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n              >\r\n                <img\r\n                  alt=\"Preview\"\r\n                  style={{ width: \"100%\" }}\r\n                  src={previewImage}\r\n                />\r\n              </Modal>\r\n            </div>\r\n          </Form.Item>\r\n        </div>\r\n\r\n        <div>\r\n          <Editor\r\n            value={editorValue}\r\n            apiKey=\"2jhvkjrvlnoj8ak334n2tzi6n3ltegj0pl128h3lhd0s4bpo\"\r\n            initialValue=\"<p>This is the initial content of the editor</p>\"\r\n            init={{\r\n              language: \"zh-Hans\",\r\n              language_url: \"../../../zh-Hans.js\",\r\n              menubar: true,\r\n              height: 500,\r\n              images_upload_handler: onUploadImage,\r\n              plugins: [\r\n                \"advlist autolink lists link image charmap print preview anchor\",\r\n                \"searchreplace visualblocks code fullscreen\",\r\n                \"insertdatetime media table paste code help wordcount\",\r\n                \"image\",\r\n              ],\r\n              toolbar:\r\n                \"undo redo | formatselect | bold italic backcolor | \\\r\n            alignleft aligncenter alignright alignjustify | \\\r\n            bullist numlist outdent indent | removeformat | help | \\\r\n            image\",\r\n            }}\r\n            onEditorChange={handleEditorChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"saveBtn\">\r\n          <EbayButton\r\n            disabled={saveDisabled}\r\n            htmlType=\"submit\"\r\n            priority=\"primary\"\r\n          >\r\n            保存\r\n          </EbayButton>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostEditView;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { get } from \"utils/api\";\r\nimport { AdminConstants } from \"utils/constants\";\r\n\r\nconst usePostEdit = () => {\r\n  const [post, setPost] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    \"cover-image\": \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (id) {\r\n        const result = await get(AdminConstants.POST_URI, [\r\n          {\r\n            key: \"useMock\",\r\n            value: \"true\",\r\n          },\r\n          {\r\n            key: \"id\",\r\n            value: id,\r\n          },\r\n        ]);\r\n\r\n        setPost(result);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { post };\r\n};\r\n\r\nexport default usePostEdit;\r\n","import PostEditView from \"./PostEditView\";\r\nimport { save } from \"utils/api\";\r\nimport { AdminConstants, REMOTE_URL } from \"utils/constants\";\r\nimport TopNav from \"components/Others/Head/TopNav\";\r\nimport usePostEdit from \"./PostEditHook\";\r\n\r\nconst PostEditContainer = () => {\r\n  const { post } = usePostEdit();\r\n\r\n  const savePost = async (id, title, coverImage, content) => {\r\n    var body = {\r\n      title,\r\n      \"cover-image\": \"todo\",\r\n      content,\r\n    };\r\n    if (id) {\r\n      body.id = id;\r\n    }\r\n    var result = await save(\r\n      !id ? AdminConstants.POST_SAVE_URI : AdminConstants.POST_UPDATE_URI,\r\n      [\r\n        {\r\n          key: \"useMock\",\r\n          value: \"true\",\r\n        },\r\n      ],\r\n      body,\r\n    );\r\n\r\n    return result;\r\n  };\r\n\r\n  const uploadImage = (blobInfo, progress) =>\r\n    new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.withCredentials = false;\r\n      xhr.open(\r\n        \"POST\",\r\n        `${\r\n          REMOTE_URL + AdminConstants.POST_UPLOAD_IMAGE\r\n        }?fileName=${new Date().getTime()}.jpeg`,\r\n      );\r\n\r\n      xhr.setRequestHeader(\r\n        \"luso_token\",\r\n        \"c6c54ce4-dc21-4e87-bdab-482dc6f0c96b\",\r\n      );\r\n\r\n      xhr.upload.onprogress = () => {};\r\n\r\n      xhr.onload = () => {\r\n        if (xhr.status === 403) {\r\n          reject({ message: \"HTTP Error: \" + xhr.status, remove: true });\r\n          return;\r\n        }\r\n\r\n        if (xhr.status < 200 || xhr.status >= 300) {\r\n          reject(\"HTTP Error: \" + xhr.status);\r\n          return;\r\n        }\r\n\r\n        const json = JSON.parse(xhr.responseText);\r\n\r\n        if (!json || typeof json.thumbUrl != \"string\") {\r\n          reject(\"Invalid JSON: \" + xhr.responseText);\r\n          return;\r\n        }\r\n\r\n        progress(json.thumbUrl);\r\n        resolve();\r\n      };\r\n\r\n      xhr.onerror = () => {\r\n        reject(\r\n          \"Image upload failed due to a XHR Transport error. Code: \" +\r\n            xhr.status,\r\n        );\r\n      };\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", blobInfo.blob());\r\n\r\n      xhr.send(formData);\r\n    });\r\n  return (\r\n    <>\r\n      <TopNav activeIndex=\"post\" />\r\n      <PostEditView\r\n        {...post}\r\n        onSavePost={savePost}\r\n        onUploadImage={uploadImage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEditContainer;\r\n"],"names":["_ref","id","title","content","onSavePost","onUploadImage","postTitle","setPostTitle","useState","previewVisible","setPreviewVisible","previewImage","setPreviewImage","setCoverImageBase64","editorValue","setEditorContent","fileList","setFileList","errorDialogVisible","setErrorDialogVisible","successDialogVisible","setSuccessDialogVisible","savedPost","setSavedPost","saveDisabled","setSaveDisabled","form","useForm","useEffect","setFieldValue","_jsxs","className","children","EbayAlertDialog","open","confirmText","onConfirm","a11yClosetext","_jsx","EbayDialogHeader","window","location","href","concat","Form","name","initialValues","remember","onFinish","async","result","onFinishFailed","autoComplete","Item","label","rules","required","message","Input","value","onChange","e","target","placeHolder","style","display","Upload","listType","onPreview","file","thumbUrl","_ref2","newFileList","length","originFileObj","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","then","data","Modal","visible","footer","onCancel","alt","width","src","Editor","apiKey","initialValue","init","language","language_url","menubar","height","images_upload_handler","plugins","toolbar","onEditorChange","EbayButton","disabled","htmlType","priority","usePostEdit","post","setPost","useParams","get","AdminConstants","POST_URI","key","fetchData","PostEditContainer","_Fragment","TopNav","activeIndex","PostEditView","coverImage","body","save","POST_UPDATE_URI","POST_SAVE_URI","uploadImage","blobInfo","progress","xhr","XMLHttpRequest","withCredentials","REMOTE_URL","POST_UPLOAD_IMAGE","Date","getTime","setRequestHeader","upload","onprogress","status","remove","json","JSON","parse","responseText","formData","FormData","append","blob","send"],"sourceRoot":""}