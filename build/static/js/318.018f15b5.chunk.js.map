{"version":3,"file":"static/js/318.018f15b5.chunk.js","mappings":"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","sources":["components/Admin/posts/PostsView.jsx","components/Admin/posts/PostsHook.jsx","components/Admin/posts/PostsContainer.jsx"],"sourcesContent":["import { Avatar } from 'antd';\nimport { FixedSizeList } from 'react-window';\nimport './style.css';\nimport '@ebay/skin';\nimport { EbayAlertDialog } from '@ebay/ui-core-react/ebay-alert-dialog';\nimport { EbayDialogHeader } from '@ebay/ui-core-react/ebay-dialog-base';\n\nimport { useEffect, useState } from 'react';\nimport { EbayIcon } from '@ebay/ui-core-react/ebay-icon';\nimport { EbaySvg } from '@ebay/ui-core-react/ebay-svg';\nimport { EbayButton } from '@ebay/ui-core-react/ebay-button';\nexport const AdminPostsView = ({ posts, onDeletePost }) => {\n  const [confirmDeleteVisible, setConfirmDeleteVisible] = useState(false);\n  const [deletedId, setDeletedId] = useState(0);\n  const deletePost = (id) => {\n    setDeletedId(id);\n    setConfirmDeleteVisible(true);\n  };\n  const navigateToEdit = (id) => {\n    window.location.href = `/admin/post/edit/${id}`;\n  };\n  const renderRow = ({ index, style }) => {\n    return (\n      <div>\n        <div style={{ ...style, ...{ display: 'flex' } }}>\n          <div className=\"first-column\">\n            <a href={`/post/${posts[index].id}`}>\n              <Avatar size={40} src={posts[index]['cover-image']} />\n            </a>\n          </div>\n          <div>\n            <div>\n              <a>{posts[index].title}</a>\n            </div>\n            <div>\n              <a style={{ fontSize: '12px', color: 'grey' }}>\n                {posts[index]['created-time']}\n              </a>\n            </div>\n          </div>\n\n          <div title=\"删除\" style={{ marginLeft: '300px' }}>\n            <EbayButton\n              size=\"small\"\n              onClick={() => navigateToEdit(posts[index].id)}\n            >\n              <EbayIcon\n                name=\"ai-spectrum-filled16-colored\"\n                style={{\n                  width: '20px',\n                  height: '20px',\n                }}\n              ></EbayIcon>\n            </EbayButton>\n            <EbayButton\n              priority=\"primary\"\n              variant=\"destructive\"\n              onClick={() => deletePost(posts[index].id)}\n            >\n              <EbayIcon\n                name=\"delete16\"\n                style={{\n                  width: '20px',\n                  height: '20px',\n                  cursor: 'pointer',\n                }}\n              ></EbayIcon>\n            </EbayButton>\n          </div>\n        </div>\n\n        <EbaySvg />\n      </div>\n    );\n  };\n  return (\n    <>\n      <EbayAlertDialog\n        open={confirmDeleteVisible}\n        confirmText=\"删除\"\n        onConfirm={() => {\n          setConfirmDeleteVisible(false);\n          onDeletePost(deletedId);\n        }}\n        a11yClosetext=\"Close\"\n      >\n        <EbayDialogHeader>确定要删除当前文章吗？</EbayDialogHeader>\n        <p>删除后将不可见。</p>\n      </EbayAlertDialog>\n      <div className=\"list\">\n        <div className=\"summary\">\n          <Summary />\n        </div>\n        <FixedSizeList\n          height={window.innerHeight}\n          width={window.innerWidth - 100}\n          itemCount={posts.length}\n          itemSize={100}\n        >\n          {renderRow}\n        </FixedSizeList>\n      </div>\n    </>\n  );\n};\nexport const Summary = ({ posts = [] }) => {\n  const [latest, setLatest] = useState({});\n  useEffect(() => {\n    if (Array.isArray(posts)) {\n      posts.sort((a, b) => {\n        return new Date(b['created-time']) - new Date(a['created-time']);\n      });\n      setLatest(posts[0]);\n    }\n  }, []);\n  const nav = () => {\n    window.location.href = '/admin/post/edit';\n  };\n  return (\n    <div className=\"header-top bg-light\">\n      <h6>\n        当前共有{posts.length}文章, 最近一篇文章发表于:\n        {latest ? latest['created-time'] : ''}\n        <EbayButton\n          onClick={nav}\n          size=\"small\"\n          priority=\"primary\"\n          style={{ marginLeft: '10px', float: 'right' }}\n        >\n          新增\n        </EbayButton>\n      </h6>\n    </div>\n  );\n};\n\nAdminPostsView.Summary = Summary;\n","import { useEffect, useState } from 'react';\nimport { get } from 'utils/api';\nimport { AdminConstants } from 'utils/constants';\n\nconst usePostsHook = () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const result = await get(AdminConstants.POSTS_URI, [\n        {\n          key: 'useMock',\n          value: 'true',\n        },\n      ]);\n      result.sort((a, b) => {\n        return new Date(b['created-time']) - new Date(a['created-time']);\n      });\n      setPosts(result);\n    };\n    fetchPosts();\n  }, []);\n\n  return { posts };\n};\n\nexport default usePostsHook;\n","import { get } from 'utils/api';\nimport { AdminConstants } from 'utils/constants';\nimport { AdminPostsView } from './PostsView';\nimport TopNav from 'components/Others/Head/TopNav';\nimport usePostsHook from './PostsHook';\n\nconst AdminPosts = () => {\n  const { posts } = usePostsHook();\n  const deletePost = async (id) => {\n    const result = await get(AdminConstants.POST_DELETE, [\n      {\n        key: 'id',\n        value: id,\n      },\n    ]);\n    if (result && result.id) {\n      // reload the page\n      location.reload();\n    }\n  };\n  return (\n    <>\n      <TopNav activeIndex=\"post\" />\n      <AdminPostsView posts={posts} onDeletePost={deletePost}>\n        <AdminPostsView.Summary posts={posts} />\n      </AdminPostsView>\n    </>\n  );\n};\nexport default AdminPosts;\n"],"names":["AdminPostsView","_ref","posts","onDeletePost","_useState","useState","_useState2","_slicedToArray","confirmDeleteVisible","setConfirmDeleteVisible","_useState3","_useState4","deletedId","setDeletedId","_jsxs","_Fragment","children","EbayAlertDialog","open","confirmText","onConfirm","a11yClosetext","_jsx","EbayDialogHeader","className","Summary","FixedSizeList","height","window","innerHeight","width","innerWidth","itemCount","length","itemSize","_ref2","index","style","_objectSpread","display","href","concat","id","Avatar","size","src","title","fontSize","color","marginLeft","EbayButton","onClick","location","EbayIcon","name","priority","variant","cursor","EbaySvg","_ref3","_ref3$posts","_useState5","_useState6","latest","setLatest","useEffect","Array","isArray","sort","a","b","Date","float","setPosts","fetchPosts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","get","AdminConstants","POSTS_URI","key","value","sent","stop","apply","arguments","usePostsHook","deletePost","POST_DELETE","reload","_x","TopNav","activeIndex"],"sourceRoot":""}